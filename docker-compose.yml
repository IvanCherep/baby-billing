version: '3.4'

services:
  brt-service_db:
    container_name: brt-service_db
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changemeinprod!
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 8
    restart: unless-stopped
    ports:
      - "5431:5432"

  cdr-service_db:
    container_name: cdr-service_db
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changemeinprod!
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 8
    restart: unless-stopped
    ports:
      - "5432:5432"

  brt-service:
    build: brt-service/
    container_name: brt-service
    restart: unless-stopped
    depends_on:
      brt-service_db:
        condition: service_healthy
      hrs-service:
        condition: service_healthy
      broker:
        condition: service_started
    env_file:
      - brt-service/.env
    ports:
      - "8082:8082"
    healthcheck:
      test: curl -f http://localhost:8082/actuator/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 15
      start_period: 30s

  hrs-service:
    build: hrs-service/
    container_name: hrs-service
    restart: unless-stopped
    ports:
      - "8083:8083"
    healthcheck:
      test: curl -f http://localhost:8083/actuator/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 15
      start_period: 30s


  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 70000

  cdr-service:
    build: cdr-service/
    container_name: cdr-service
    depends_on:
      cdr-service_db:
        condition: service_healthy
      brt-service:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - cdr-service/.env
    healthcheck:
      test: curl -f http://localhost:8081/actuator/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 15
      start_period: 30s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"



